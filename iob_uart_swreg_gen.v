//This file was generated by script mkregs.py

`timescale 1ns / 1ps

module swreg
#(
	parameter ADDR_W = 0,
	parameter DATA_W = 0
)
(
	`IOB_OUTPUT(UART_SOFTRESET_o, 1),
	`IOB_INPUT(UART_DIV_i, 16),
	`IOB_OUTPUT(UART_DIV_int_o, 16),
	`IOB_OUTPUT(UART_TXDATA_o, 8),
	`IOB_INPUT(UART_TXEN_i, 1),
	`IOB_OUTPUT(UART_TXEN_int_o, 1),
	`IOB_INPUT(UART_TXREADY_i, 1),
	`IOB_OUTPUT(UART_TXREADY_int_o, 1),
	`IOB_INPUT(UART_RXDATA_i, 8),
	`IOB_OUTPUT(UART_RXDATA_int_o, 8),
	`IOB_INPUT(UART_RXEN_i, 1),
	`IOB_OUTPUT(UART_RXEN_int_o, 1),
	`IOB_INPUT(UART_RXREADY_i, 1),
	`IOB_OUTPUT(UART_RXREADY_int_o, 1),
	`include "iob_s_port.vh"
	`include "iob_clkrst_port.vh"
);


`IOB_WIRE(UART_SOFTRESET_wen, 1)
assign UART_SOFTRESET_wen = iob_valid_i & (|iob_wstrb_i[0+:1]) & `IOB_WORD_ADDR(iob_addr_i) >= `IOB_WORD_ADDR(0) & `IOB_WORD_ADDR(iob_addr_i) < `IOB_WORD_CADDR(0 + (1'b1<<0));
`IOB_WIRE(UART_SOFTRESET_wdata, 1)
assign UART_SOFTRESET_wdata = iob_wdata_i[0+:1];
`IOB_WIRE(UART_SOFTRESET_ready_i, 1)
assign UART_SOFTRESET_ready_i = |iob_wstrb_i;
iob_reg #(1,0) UART_SOFTRESET_datareg (clk_i, rst_i, 1'b0, UART_SOFTRESET_wen, UART_SOFTRESET_wdata, UART_SOFTRESET_o);

`IOB_WIRE(UART_DIV_ren, 1)
assign UART_DIV_ren = iob_valid_i && !iob_wstrb_i && `IOB_WORD_ADDR(iob_addr_i) >= `IOB_WORD_ADDR(0) && `IOB_WORD_ADDR(iob_addr_i) < `IOB_WORD_CADDR(0 + (1'b1<<0));
`IOB_WIRE(UART_DIV_ready_i, 1)
assign UART_DIV_ready_i = !iob_wstrb_i;
`IOB_WIRE(UART_DIV_rvalid_i, 1)
iob_reg #(1,0) UART_DIV_rvalid (clk_i, rst_i, 1'b0, 1'b1, UART_DIV_ren, UART_DIV_rvalid_i);
`IOB_WIRE(UART_DIV_r, 16)
iob_reg #(16,0) UART_DIV_datareg (clk_i, rst_i, 1'b0, UART_DIV_ren, UART_DIV_i, UART_DIV_r);
assign UART_DIV_int_o = UART_DIV_r;
//address register
`IOB_WIRE(addr_r, 2)
iob_reg #(2, 0) addr_r0 (clk_i, rst_i, 1'b0, iob_valid_i, iob_addr_i, addr_r);


`IOB_WIRE(UART_TXDATA_wen, 1)
assign UART_TXDATA_wen = iob_valid_i & (|iob_wstrb_i[1+:1]) & `IOB_WORD_ADDR(iob_addr_i) >= `IOB_WORD_ADDR(1) & `IOB_WORD_ADDR(iob_addr_i) < `IOB_WORD_CADDR(1 + (1'b1<<0));
`IOB_WIRE(UART_TXDATA_wdata, 8)
assign UART_TXDATA_wdata = iob_wdata_i[8+:8];
`IOB_WIRE(UART_TXDATA_ready_i, 1)
assign UART_TXDATA_ready_i = |iob_wstrb_i;
iob_reg #(8,0) UART_TXDATA_datareg (clk_i, rst_i, 1'b0, UART_TXDATA_wen, UART_TXDATA_wdata, UART_TXDATA_o);

`IOB_WIRE(UART_TXEN_ren, 1)
assign UART_TXEN_ren = iob_valid_i && !iob_wstrb_i && `IOB_WORD_ADDR(iob_addr_i) >= `IOB_WORD_ADDR(-1) && `IOB_WORD_ADDR(iob_addr_i) < `IOB_WORD_CADDR(-1 + (1'b1<<0));
`IOB_WIRE(UART_TXEN_ready_i, 1)
assign UART_TXEN_ready_i = !iob_wstrb_i;
`IOB_WIRE(UART_TXEN_rvalid_i, 1)
iob_reg #(1,0) UART_TXEN_rvalid (clk_i, rst_i, 1'b0, 1'b1, UART_TXEN_ren, UART_TXEN_rvalid_i);
`IOB_WIRE(UART_TXEN_r, 1)
iob_reg #(1,0) UART_TXEN_datareg (clk_i, rst_i, 1'b0, UART_TXEN_ren, UART_TXEN_i, UART_TXEN_r);
assign UART_TXEN_int_o = UART_TXEN_r;

`IOB_WIRE(UART_TXREADY_ren, 1)
assign UART_TXREADY_ren = iob_valid_i && !iob_wstrb_i && `IOB_WORD_ADDR(iob_addr_i) >= `IOB_WORD_ADDR(0) && `IOB_WORD_ADDR(iob_addr_i) < `IOB_WORD_CADDR(0 + (1'b1<<0));
`IOB_WIRE(UART_TXREADY_ready_i, 1)
assign UART_TXREADY_ready_i = !iob_wstrb_i;
`IOB_WIRE(UART_TXREADY_rvalid_i, 1)
iob_reg #(1,0) UART_TXREADY_rvalid (clk_i, rst_i, 1'b0, 1'b1, UART_TXREADY_ren, UART_TXREADY_rvalid_i);
`IOB_WIRE(UART_TXREADY_r, 1)
iob_reg #(1,0) UART_TXREADY_datareg (clk_i, rst_i, 1'b0, UART_TXREADY_ren, UART_TXREADY_i, UART_TXREADY_r);
assign UART_TXREADY_int_o = UART_TXREADY_r;

`IOB_WIRE(UART_RXDATA_ren, 1)
assign UART_RXDATA_ren = iob_valid_i && !iob_wstrb_i && `IOB_WORD_ADDR(iob_addr_i) >= `IOB_WORD_ADDR(1) && `IOB_WORD_ADDR(iob_addr_i) < `IOB_WORD_CADDR(1 + (1'b1<<0));
`IOB_WIRE(UART_RXDATA_ready_i, 1)
assign UART_RXDATA_ready_i = !iob_wstrb_i;
`IOB_WIRE(UART_RXDATA_rvalid_i, 1)
iob_reg #(1,0) UART_RXDATA_rvalid (clk_i, rst_i, 1'b0, 1'b1, UART_RXDATA_ren, UART_RXDATA_rvalid_i);
`IOB_WIRE(UART_RXDATA_r, 8)
iob_reg #(8,0) UART_RXDATA_datareg (clk_i, rst_i, 1'b0, UART_RXDATA_ren, UART_RXDATA_i, UART_RXDATA_r);
assign UART_RXDATA_int_o = UART_RXDATA_r;

`IOB_WIRE(UART_RXEN_ren, 1)
assign UART_RXEN_ren = iob_valid_i && !iob_wstrb_i && `IOB_WORD_ADDR(iob_addr_i) >= `IOB_WORD_ADDR(-1) && `IOB_WORD_ADDR(iob_addr_i) < `IOB_WORD_CADDR(-1 + (1'b1<<0));
`IOB_WIRE(UART_RXEN_ready_i, 1)
assign UART_RXEN_ready_i = !iob_wstrb_i;
`IOB_WIRE(UART_RXEN_rvalid_i, 1)
iob_reg #(1,0) UART_RXEN_rvalid (clk_i, rst_i, 1'b0, 1'b1, UART_RXEN_ren, UART_RXEN_rvalid_i);
`IOB_WIRE(UART_RXEN_r, 1)
iob_reg #(1,0) UART_RXEN_datareg (clk_i, rst_i, 1'b0, UART_RXEN_ren, UART_RXEN_i, UART_RXEN_r);
assign UART_RXEN_int_o = UART_RXEN_r;

`IOB_WIRE(UART_RXREADY_ren, 1)
assign UART_RXREADY_ren = iob_valid_i && !iob_wstrb_i && `IOB_WORD_ADDR(iob_addr_i) >= `IOB_WORD_ADDR(2) && `IOB_WORD_ADDR(iob_addr_i) < `IOB_WORD_CADDR(2 + (1'b1<<0));
`IOB_WIRE(UART_RXREADY_ready_i, 1)
assign UART_RXREADY_ready_i = !iob_wstrb_i;
`IOB_WIRE(UART_RXREADY_rvalid_i, 1)
iob_reg #(1,0) UART_RXREADY_rvalid (clk_i, rst_i, 1'b0, 1'b1, UART_RXREADY_ren, UART_RXREADY_rvalid_i);
`IOB_WIRE(UART_RXREADY_r, 1)
iob_reg #(1,0) UART_RXREADY_datareg (clk_i, rst_i, 1'b0, UART_RXREADY_ren, UART_RXREADY_i, UART_RXREADY_r);
assign UART_RXREADY_int_o = UART_RXREADY_r;

`IOB_VAR(rdata_int, 8*`IOB_NBYTES)
`IOB_VAR(rvalid_int, 1)
`IOB_VAR(wready_int, 1)
`IOB_VAR(rready_int, 1)
`IOB_WIRE(ready_int, 1)

`IOB_COMB begin

	wready_int = 1'b0;
	rready_int = 1'b0;
	rdata_int = 0;
	rvalid_int = 1'b0;

	if( `IOB_WORD_ADDR(iob_addr_i) >= `IOB_WORD_ADDR(0) && `IOB_WORD_ADDR(iob_addr_i) < `IOB_WORD_CADDR(0 + (1'b1<<0)) ) 
		wready_int = ready_int | UART_SOFTRESET_ready_i;
	if( `IOB_WORD_ADDR(iob_addr_i) >= `IOB_WORD_ADDR(0) && `IOB_WORD_ADDR(iob_addr_i) < `IOB_WORD_CADDR(0 + (1'b1<<0)) ) 
		wready_int = ready_int | UART_DIV_ready_i;
	if( `IOB_WORD_ADDR(iob_addr_i) >= `IOB_WORD_ADDR(1) && `IOB_WORD_ADDR(iob_addr_i) < `IOB_WORD_CADDR(1 + (1'b1<<0)) ) 
		wready_int = ready_int | UART_TXDATA_ready_i;
	if( `IOB_WORD_ADDR(iob_addr_i) >= `IOB_WORD_ADDR(-1) && `IOB_WORD_ADDR(iob_addr_i) < `IOB_WORD_CADDR(-1 + (1'b1<<0)) ) 
		wready_int = ready_int | UART_TXEN_ready_i;
	if( `IOB_WORD_ADDR(addr_r) >= `IOB_WORD_ADDR(0) && `IOB_WORD_ADDR(addr_r) < `IOB_WORD_CADDR(0 + (1'b1<<0)) )
		rdata_int = rdata_int | (UART_TXREADY_r << (8*`IOB_BYTE_OFFSET(0)));
		rvalid_int = rvalid_int | UART_TXREADY_rvalid_i;
	if( `IOB_WORD_ADDR(iob_addr_i) >= `IOB_WORD_ADDR(0) && `IOB_WORD_ADDR(iob_addr_i) < `IOB_WORD_CADDR(0 + (1'b1<<0)) ) 
		rready_int = ready_int | UART_TXREADY_ready_i;
	if( `IOB_WORD_ADDR(addr_r) >= `IOB_WORD_ADDR(1) && `IOB_WORD_ADDR(addr_r) < `IOB_WORD_CADDR(1 + (1'b1<<0)) )
		rdata_int = rdata_int | (UART_RXDATA_r << (8*`IOB_BYTE_OFFSET(1)));
		rvalid_int = rvalid_int | UART_RXDATA_rvalid_i;
	if( `IOB_WORD_ADDR(iob_addr_i) >= `IOB_WORD_ADDR(1) && `IOB_WORD_ADDR(iob_addr_i) < `IOB_WORD_CADDR(1 + (1'b1<<0)) ) 
		rready_int = ready_int | UART_RXDATA_ready_i;
	if( `IOB_WORD_ADDR(iob_addr_i) >= `IOB_WORD_ADDR(-1) && `IOB_WORD_ADDR(iob_addr_i) < `IOB_WORD_CADDR(-1 + (1'b1<<0)) ) 
		wready_int = ready_int | UART_RXEN_ready_i;
	if( `IOB_WORD_ADDR(addr_r) >= `IOB_WORD_ADDR(2) && `IOB_WORD_ADDR(addr_r) < `IOB_WORD_CADDR(2 + (1'b1<<0)) )
		rdata_int = rdata_int | (UART_RXREADY_r << (8*`IOB_BYTE_OFFSET(2)));
		rvalid_int = rvalid_int | UART_RXREADY_rvalid_i;
	if( `IOB_WORD_ADDR(iob_addr_i) >= `IOB_WORD_ADDR(2) && `IOB_WORD_ADDR(iob_addr_i) < `IOB_WORD_CADDR(2 + (1'b1<<0)) ) 
		rready_int = ready_int | UART_RXREADY_ready_i;
end

assign ready_int = iob_wstrb_i? wready_int: rready_int;
`IOB_VAR2WIRE(ready_int, iob_ready_o)
`IOB_VAR2WIRE(rdata_int, iob_rdata_o)
`IOB_VAR2WIRE(rvalid_int, iob_rvalid_o)

endmodule
